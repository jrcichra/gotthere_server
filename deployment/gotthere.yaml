apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: gotthere-server
  name: gotthere-server
  namespace: gotthere
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: tcp-2810-2810-4rhxr
      port: 2810
      protocol: TCP
      targetPort: 2810
  selector:
    k8s-app: gotthere-server
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: gotthere-server
  name: gotthere-server-http
  namespace: gotthere
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: tcp-8080-8080-4rhxr
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    k8s-app: gotthere-server
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: gotthere-server
  name: gotthere-server
  namespace: gotthere
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: gotthere-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: gotthere-server
      name: gotthere-server
    spec:
      containers:
        - image: tjcichra/gotthere_server
          imagePullPolicy: Always
          name: gotthere-server
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
